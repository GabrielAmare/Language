digraph {
	AbstractGR [label=AbstractGR fillcolor=orange shape=rect style=filled]
	AbstractGR -> Block
	AbstractGR -> ImportPath
	AbstractGR -> IndentedListBody
	AbstractGR -> Module
	AbstractGR -> AltGR
	AbstractGR -> ArgumentGR
	AbstractGR -> ParamGR
	AbstractGR -> SliceGR
	AbstractGR -> Statement
	Block [label=Block fillcolor=lightblue shape=rect style=filled]
	ImportPath [label=ImportPath fillcolor=lightblue shape=rect style=filled]
	IndentedListBody [label=IndentedListBody fillcolor=lightblue shape=rect style=filled]
	Module [label=Module fillcolor=lightblue shape=rect style=filled]
	AltGR [label=AltGR fillcolor=orange shape=rect style=filled]
	AltGR -> Elif
	AltGR -> Else
	ArgumentGR [label=ArgumentGR fillcolor=orange shape=rect style=filled]
	ArgumentGR -> DoubleStarred
	ArgumentGR -> Kwarg
	ArgumentGR -> StarredExpression
	ArgumentGR -> Expression
	ParamGR [label=ParamGR fillcolor=orange shape=rect style=filled]
	ParamGR -> ArgsParam
	ParamGR -> KwargsParam
	ParamGR -> Param
	SliceGR [label=SliceGR fillcolor=orange shape=rect style=filled]
	SliceGR -> Slice
	SliceGR -> Expression
	Statement [label=Statement fillcolor=orange shape=rect style=filled]
	Statement -> _Break
	Statement -> _Continue
	Statement -> _EmptyLine
	Statement -> _Pass
	Statement -> Assign
	Statement -> For
	Statement -> IAdd
	Statement -> If
	Statement -> StatementExpression
	Statement -> While
	Statement -> DecoratorGR
	Statement -> ImportStatement
	Statement -> ReturningStatement
	_Break [label=BREAK fillcolor="#844de3" shape=rect style=filled]
	_Continue [label=CONTINUE fillcolor="#844de3" shape=rect style=filled]
	_EmptyLine [label=EMPTY_LINE fillcolor="#844de3" shape=rect style=filled]
	_Pass [label=PASS fillcolor="#844de3" shape=rect style=filled]
	ArgsParam [label=ArgsParam fillcolor=lightblue shape=rect style=filled]
	Assign [label=Assign fillcolor=lightblue shape=rect style=filled]
	DoubleStarred [label=DoubleStarred fillcolor=lightblue shape=rect style=filled]
	Elif [label=Elif fillcolor=lightblue shape=rect style=filled]
	Else [label=Else fillcolor=lightblue shape=rect style=filled]
	For [label=For fillcolor=lightblue shape=rect style=filled]
	IAdd [label=IAdd fillcolor=lightblue shape=rect style=filled]
	If [label=If fillcolor=lightblue shape=rect style=filled]
	Kwarg [label=Kwarg fillcolor=lightblue shape=rect style=filled]
	KwargsParam [label=KwargsParam fillcolor=lightblue shape=rect style=filled]
	Param [label=Param fillcolor=lightblue shape=rect style=filled]
	Slice [label=Slice fillcolor=lightblue shape=rect style=filled]
	StarredExpression [label=StarredExpression fillcolor=lightblue shape=rect style=filled]
	StatementExpression [label=StatementExpression fillcolor=lightblue shape=rect style=filled]
	While [label=While fillcolor=lightblue shape=rect style=filled]
	DecoratorGR [label=DecoratorGR fillcolor=orange shape=rect style=filled]
	DecoratorGR -> Class
	DecoratorGR -> Decorator
	DecoratorGR -> Function
	Expression [label=Expression fillcolor=orange shape=rect style=filled]
	Expression -> Disjunction
	ImportStatement [label=ImportStatement fillcolor=orange shape=rect style=filled]
	ImportStatement -> Import
	ImportStatement -> ImportFrom
	ReturningStatement [label=ReturningStatement fillcolor=orange shape=rect style=filled]
	ReturningStatement -> Raise
	ReturningStatement -> Return
	ReturningStatement -> Yield
	ReturningStatement -> YieldFrom
	Class [label=Class fillcolor=lightblue shape=rect style=filled]
	Decorator [label=Decorator fillcolor=lightblue shape=rect style=filled]
	Function [label=Function fillcolor=lightblue shape=rect style=filled]
	Import [label=Import fillcolor=lightblue shape=rect style=filled]
	ImportFrom [label=ImportFrom fillcolor=lightblue shape=rect style=filled]
	Raise [label=Raise fillcolor=lightblue shape=rect style=filled]
	Return [label=Return fillcolor=lightblue shape=rect style=filled]
	Yield [label=Yield fillcolor=lightblue shape=rect style=filled]
	YieldFrom [label=YieldFrom fillcolor=lightblue shape=rect style=filled]
	Disjunction [label=Disjunction fillcolor=orange shape=rect style=filled]
	Disjunction -> Or
	Disjunction -> Conjunction
	Or [label=Or fillcolor=lightblue shape=rect style=filled]
	Conjunction [label=Conjunction fillcolor=orange shape=rect style=filled]
	Conjunction -> And
	Conjunction -> Inversion
	And [label=And fillcolor=lightblue shape=rect style=filled]
	Inversion [label=Inversion fillcolor=orange shape=rect style=filled]
	Inversion -> Not
	Inversion -> Comparison
	Not [label=Not fillcolor=lightblue shape=rect style=filled]
	Comparison [label=Comparison fillcolor=orange shape=rect style=filled]
	Comparison -> Eq
	Comparison -> Ge
	Comparison -> Gt
	Comparison -> In
	Comparison -> Is
	Comparison -> IsNot
	Comparison -> Le
	Comparison -> Lt
	Comparison -> Ne
	Comparison -> NotIn
	Comparison -> BitwiseOrGR
	Eq [label=Eq fillcolor=lightblue shape=rect style=filled]
	Ge [label=Ge fillcolor=lightblue shape=rect style=filled]
	Gt [label=Gt fillcolor=lightblue shape=rect style=filled]
	In [label=In fillcolor=lightblue shape=rect style=filled]
	Is [label=Is fillcolor=lightblue shape=rect style=filled]
	IsNot [label=IsNot fillcolor=lightblue shape=rect style=filled]
	Le [label=Le fillcolor=lightblue shape=rect style=filled]
	Lt [label=Lt fillcolor=lightblue shape=rect style=filled]
	Ne [label=Ne fillcolor=lightblue shape=rect style=filled]
	NotIn [label=NotIn fillcolor=lightblue shape=rect style=filled]
	BitwiseOrGR [label=BitwiseOrGR fillcolor=orange shape=rect style=filled]
	BitwiseOrGR -> BitwiseOr
	BitwiseOrGR -> BitwiseXorGR
	BitwiseOr [label=BitwiseOr fillcolor=lightblue shape=rect style=filled]
	BitwiseXorGR [label=BitwiseXorGR fillcolor=orange shape=rect style=filled]
	BitwiseXorGR -> BitwiseXor
	BitwiseXorGR -> BitwiseAndGR
	BitwiseXor [label=BitwiseXor fillcolor=lightblue shape=rect style=filled]
	BitwiseAndGR [label=BitwiseAndGR fillcolor=orange shape=rect style=filled]
	BitwiseAndGR -> BitwiseAnd
	BitwiseAndGR -> ShiftGR
	BitwiseAnd [label=BitwiseAnd fillcolor=lightblue shape=rect style=filled]
	ShiftGR [label=ShiftGR fillcolor=orange shape=rect style=filled]
	ShiftGR -> LShift
	ShiftGR -> RShift
	ShiftGR -> Sum
	LShift [label=LShift fillcolor=lightblue shape=rect style=filled]
	RShift [label=RShift fillcolor=lightblue shape=rect style=filled]
	Sum [label=Sum fillcolor=orange shape=rect style=filled]
	Sum -> Add
	Sum -> Sub
	Sum -> Term
	Add [label=Add fillcolor=lightblue shape=rect style=filled]
	Sub [label=Sub fillcolor=lightblue shape=rect style=filled]
	Term [label=Term fillcolor=orange shape=rect style=filled]
	Term -> FloorDiv
	Term -> MatMul
	Term -> Mod
	Term -> Mul
	Term -> TrueDiv
	Term -> Factor
	FloorDiv [label=FloorDiv fillcolor=lightblue shape=rect style=filled]
	MatMul [label=MatMul fillcolor=lightblue shape=rect style=filled]
	Mod [label=Mod fillcolor=lightblue shape=rect style=filled]
	Mul [label=Mul fillcolor=lightblue shape=rect style=filled]
	TrueDiv [label=TrueDiv fillcolor=lightblue shape=rect style=filled]
	Factor [label=Factor fillcolor=orange shape=rect style=filled]
	Factor -> Inv
	Factor -> Neg
	Factor -> Pos
	Factor -> Power
	Inv [label=Inv fillcolor=lightblue shape=rect style=filled]
	Neg [label=Neg fillcolor=lightblue shape=rect style=filled]
	Pos [label=Pos fillcolor=lightblue shape=rect style=filled]
	Power [label=Power fillcolor=orange shape=rect style=filled]
	Power -> Pow
	Power -> AwaitPrimary
	Pow [label=Pow fillcolor=lightblue shape=rect style=filled]
	AwaitPrimary [label=AwaitPrimary fillcolor=orange shape=rect style=filled]
	AwaitPrimary -> Awaited
	AwaitPrimary -> Primary
	Awaited [label=Awaited fillcolor=lightblue shape=rect style=filled]
	Primary [label=Primary fillcolor=orange shape=rect style=filled]
	Primary -> Call
	Primary -> GetAttr
	Primary -> GetItem
	Primary -> Atom
	Call [label=Call fillcolor=lightblue shape=rect style=filled]
	GetAttr [label=GetAttr fillcolor=lightblue shape=rect style=filled]
	GetItem [label=GetItem fillcolor=lightblue shape=rect style=filled]
	Atom [label=Atom fillcolor=orange shape=rect style=filled]
	Atom -> _Ellipsis
	Atom -> _False
	Atom -> _None
	Atom -> _True
	Atom -> Decimal
	Atom -> Integer
	Atom -> String
	Atom -> Variable
	Atom -> IndentedList
	Atom -> List
	Atom -> Tuple
	_Ellipsis [label=ELLIPSIS fillcolor="#844de3" shape=rect style=filled]
	_False [label=FALSE fillcolor="#844de3" shape=rect style=filled]
	_None [label=NONE fillcolor="#844de3" shape=rect style=filled]
	_True [label=TRUE fillcolor="#844de3" shape=rect style=filled]
	Decimal [label=Decimal fillcolor=lime shape=rect style=filled]
	Integer [label=Integer fillcolor=lime shape=rect style=filled]
	String [label=String fillcolor=lime shape=rect style=filled]
	Variable [label=Variable fillcolor=lime shape=rect style=filled]
	IndentedList [label=IndentedList fillcolor=lightblue shape=rect style=filled]
	List [label=List fillcolor=lightblue shape=rect style=filled]
	Tuple [label=Tuple fillcolor=lightblue shape=rect style=filled]
}
