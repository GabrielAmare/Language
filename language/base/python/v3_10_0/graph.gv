digraph {
	AbstractGR [label="{ <> AbstractGR  }" fillcolor=orange shape=record style=filled]
	Block [label="{ <> Block | <statements> statements: Statement }" fillcolor=lightblue shape=record style=filled]
	ImportPath [label="{ <> ImportPath | <parts> parts: Variable }" fillcolor=lightblue shape=record style=filled]
	IndentedListBody [label="{ <> IndentedListBody | <items> items: Expression }" fillcolor=lightblue shape=record style=filled]
	Module [label="{ <> Module | <statements> statements: Statement }" fillcolor=lightblue shape=record style=filled]
	AltGR [label="{ <> AltGR | <block> block: Block }" fillcolor=orange shape=record style=filled]
	ArgumentGR [label="{ <> ArgumentGR  }" fillcolor=orange shape=record style=filled]
	ParamGR [label="{ <> ParamGR | <name> name: Variable | <type> type: Expression }" fillcolor=orange shape=record style=filled]
	SliceGR [label="{ <> SliceGR  }" fillcolor=orange shape=record style=filled]
	Statement [label="{ <> Statement  }" fillcolor=orange shape=record style=filled]
	_Break [label=BREAK fillcolor="#844de3" shape=rect style=filled]
	_Continue [label=CONTINUE fillcolor="#844de3" shape=rect style=filled]
	_EmptyLine [label=EMPTY_LINE fillcolor="#844de3" shape=rect style=filled]
	_Pass [label=PASS fillcolor="#844de3" shape=rect style=filled]
	ArgsParam [label="{ <> ArgsParam  }" fillcolor=lightblue shape=record style=filled]
	Assign [label="{ <> Assign | <target> target: Primary | <type> type: Expression | <value> value: Expression }" fillcolor=lightblue shape=record style=filled]
	DoubleStarred [label="{ <> DoubleStarred | <value> value: Expression }" fillcolor=lightblue shape=record style=filled]
	Elif [label="{ <> Elif | <test> test: Expression | <alt> alt: AltGR }" fillcolor=lightblue shape=record style=filled]
	Else [label="{ <> Else  }" fillcolor=lightblue shape=record style=filled]
	For [label="{ <> For | <args> args: Variable | <iter> iter: Expression | <block> block: Block }" fillcolor=lightblue shape=record style=filled]
	IAdd [label="{ <> IAdd | <target> target: Primary | <value> value: Expression }" fillcolor=lightblue shape=record style=filled]
	If [label="{ <> If | <test> test: Expression | <block> block: Block | <alt> alt: AltGR }" fillcolor=lightblue shape=record style=filled]
	Kwarg [label="{ <> Kwarg | <name> name: Variable | <value> value: Expression }" fillcolor=lightblue shape=record style=filled]
	KwargsParam [label="{ <> KwargsParam  }" fillcolor=lightblue shape=record style=filled]
	Param [label="{ <> Param | <default> default: Expression }" fillcolor=lightblue shape=record style=filled]
	Slice [label="{ <> Slice | <first> first: Expression | <second> second: Expression | <third> third: Expression }" fillcolor=lightblue shape=record style=filled]
	StarredExpression [label="{ <> StarredExpression | <value> value: Expression }" fillcolor=lightblue shape=record style=filled]
	StatementExpression [label="{ <> StatementExpression | <expr> expr: Expression }" fillcolor=lightblue shape=record style=filled]
	While [label="{ <> While | <test> test: Expression | <block> block: Block }" fillcolor=lightblue shape=record style=filled]
	DecoratorGR [label="{ <> DecoratorGR  }" fillcolor=orange shape=record style=filled]
	Expression [label="{ <> Expression  }" fillcolor=orange shape=record style=filled]
	ImportStatement [label="{ <> ImportStatement | <targets> targets: ImportPath }" fillcolor=orange shape=record style=filled]
	ReturningStatement [label="{ <> ReturningStatement  }" fillcolor=orange shape=record style=filled]
	Class [label="{ <> Class | <name> name: Variable | <mro> mro: Expression | <block> block: Block }" fillcolor=lightblue shape=record style=filled]
	Decorator [label="{ <> Decorator | <expr> expr: Expression | <target> target: DecoratorGR }" fillcolor=lightblue shape=record style=filled]
	Function [label="{ <> Function | <name> name: Variable | <args> args: ParamGR | <returns> returns: Expression | <block> block: Block }" fillcolor=lightblue shape=record style=filled]
	Import [label="{ <> Import  }" fillcolor=lightblue shape=record style=filled]
	ImportFrom [label="{ <> ImportFrom | <origin> origin: ImportPath }" fillcolor=lightblue shape=record style=filled]
	Raise [label="{ <> Raise | <exc> exc: Expression | <cause> cause: Expression }" fillcolor=lightblue shape=record style=filled]
	Return [label="{ <> Return | <expressions> expressions: Expression }" fillcolor=lightblue shape=record style=filled]
	Yield [label="{ <> Yield | <expressions> expressions: Expression }" fillcolor=lightblue shape=record style=filled]
	YieldFrom [label="{ <> YieldFrom | <expr> expr: Expression }" fillcolor=lightblue shape=record style=filled]
	Disjunction [label="{ <> Disjunction  }" fillcolor=orange shape=record style=filled]
	Or [label="{ <> Or | <items> items: Conjunction }" fillcolor=lightblue shape=record style=filled]
	Conjunction [label="{ <> Conjunction  }" fillcolor=orange shape=record style=filled]
	And [label="{ <> And | <items> items: Inversion }" fillcolor=lightblue shape=record style=filled]
	Inversion [label="{ <> Inversion  }" fillcolor=orange shape=record style=filled]
	Not [label="{ <> Not | <right> right: Inversion }" fillcolor=lightblue shape=record style=filled]
	Comparison [label="{ <> Comparison  }" fillcolor=orange shape=record style=filled]
	Eq [label="{ <> Eq | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	Ge [label="{ <> Ge | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	Gt [label="{ <> Gt | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	In [label="{ <> In | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	Is [label="{ <> Is | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	IsNot [label="{ <> IsNot | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	Le [label="{ <> Le | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	Lt [label="{ <> Lt | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	Ne [label="{ <> Ne | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	NotIn [label="{ <> NotIn | <left> left: Comparison | <right> right: BitwiseOrGR }" fillcolor=lightblue shape=record style=filled]
	BitwiseOrGR [label="{ <> BitwiseOrGR  }" fillcolor=orange shape=record style=filled]
	BitwiseOr [label="{ <> BitwiseOr | <left> left: BitwiseOrGR | <right> right: BitwiseXorGR }" fillcolor=lightblue shape=record style=filled]
	BitwiseXorGR [label="{ <> BitwiseXorGR  }" fillcolor=orange shape=record style=filled]
	BitwiseXor [label="{ <> BitwiseXor | <left> left: BitwiseXorGR | <right> right: BitwiseAndGR }" fillcolor=lightblue shape=record style=filled]
	BitwiseAndGR [label="{ <> BitwiseAndGR  }" fillcolor=orange shape=record style=filled]
	BitwiseAnd [label="{ <> BitwiseAnd | <left> left: BitwiseAndGR | <right> right: ShiftGR }" fillcolor=lightblue shape=record style=filled]
	ShiftGR [label="{ <> ShiftGR  }" fillcolor=orange shape=record style=filled]
	LShift [label="{ <> LShift | <left> left: ShiftGR | <right> right: Sum }" fillcolor=lightblue shape=record style=filled]
	RShift [label="{ <> RShift | <left> left: ShiftGR | <right> right: Sum }" fillcolor=lightblue shape=record style=filled]
	Sum [label="{ <> Sum  }" fillcolor=orange shape=record style=filled]
	Add [label="{ <> Add | <left> left: Sum | <right> right: Term }" fillcolor=lightblue shape=record style=filled]
	Sub [label="{ <> Sub | <left> left: Sum | <right> right: Term }" fillcolor=lightblue shape=record style=filled]
	Term [label="{ <> Term  }" fillcolor=orange shape=record style=filled]
	FloorDiv [label="{ <> FloorDiv | <left> left: Term | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	MatMul [label="{ <> MatMul | <left> left: Term | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	Mod [label="{ <> Mod | <left> left: Term | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	Mul [label="{ <> Mul | <left> left: Term | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	TrueDiv [label="{ <> TrueDiv | <left> left: Term | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	Factor [label="{ <> Factor  }" fillcolor=orange shape=record style=filled]
	Inv [label="{ <> Inv | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	Neg [label="{ <> Neg | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	Pos [label="{ <> Pos | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	Power [label="{ <> Power  }" fillcolor=orange shape=record style=filled]
	Pow [label="{ <> Pow | <left> left: AwaitPrimary | <right> right: Factor }" fillcolor=lightblue shape=record style=filled]
	AwaitPrimary [label="{ <> AwaitPrimary  }" fillcolor=orange shape=record style=filled]
	Awaited [label="{ <> Awaited | <right> right: Primary }" fillcolor=lightblue shape=record style=filled]
	Primary [label="{ <> Primary  }" fillcolor=orange shape=record style=filled]
	Call [label="{ <> Call | <left> left: Primary | <args> args: ArgumentGR }" fillcolor=lightblue shape=record style=filled]
	GetAttr [label="{ <> GetAttr | <left> left: Primary | <right> right: Variable }" fillcolor=lightblue shape=record style=filled]
	GetItem [label="{ <> GetItem | <left> left: Primary | <items> items: SliceGR }" fillcolor=lightblue shape=record style=filled]
	Atom [label="{ <> Atom  }" fillcolor=orange shape=record style=filled]
	_Ellipsis [label=ELLIPSIS fillcolor="#844de3" shape=rect style=filled]
	_False [label=FALSE fillcolor="#844de3" shape=rect style=filled]
	_None [label=NONE fillcolor="#844de3" shape=rect style=filled]
	_True [label=TRUE fillcolor="#844de3" shape=rect style=filled]
	Decimal [label="{ <> Decimal | <content> content: str }" fillcolor=lime shape=record style=filled]
	Integer [label="{ <> Integer | <content> content: str }" fillcolor=lime shape=record style=filled]
	String [label="{ <> String | <content> content: str }" fillcolor=lime shape=record style=filled]
	Variable [label="{ <> Variable | <content> content: str }" fillcolor=lime shape=record style=filled]
	IndentedList [label="{ <> IndentedList | <body> body: IndentedListBody }" fillcolor=lightblue shape=record style=filled]
	List [label="{ <> List | <items> items: Expression }" fillcolor=lightblue shape=record style=filled]
	Tuple [label="{ <> Tuple | <items> items: Expression }" fillcolor=lightblue shape=record style=filled]
	AbstractGR -> Block [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> ImportPath [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> IndentedListBody [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> Module [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> AltGR [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> ArgumentGR [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> ParamGR [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> SliceGR [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> Statement [arrowtail=diamond color=darkorange dir=back]
	AltGR -> Elif [arrowtail=diamond color=darkorange dir=back]
	AltGR -> Else [arrowtail=diamond color=darkorange dir=back]
	ArgumentGR -> DoubleStarred [arrowtail=diamond color=darkorange dir=back]
	ArgumentGR -> Kwarg [arrowtail=diamond color=darkorange dir=back]
	ArgumentGR -> StarredExpression [arrowtail=diamond color=darkorange dir=back]
	ArgumentGR -> Expression [arrowtail=diamond color=darkorange dir=back]
	ParamGR -> ArgsParam [arrowtail=diamond color=darkorange dir=back]
	ParamGR -> KwargsParam [arrowtail=diamond color=darkorange dir=back]
	ParamGR -> Param [arrowtail=diamond color=darkorange dir=back]
	SliceGR -> Slice [arrowtail=diamond color=darkorange dir=back]
	SliceGR -> Expression [arrowtail=diamond color=darkorange dir=back]
	Statement -> _Break [arrowtail=diamond color=darkorange dir=back]
	Statement -> _Continue [arrowtail=diamond color=darkorange dir=back]
	Statement -> _EmptyLine [arrowtail=diamond color=darkorange dir=back]
	Statement -> _Pass [arrowtail=diamond color=darkorange dir=back]
	Statement -> Assign [arrowtail=diamond color=darkorange dir=back]
	Statement -> For [arrowtail=diamond color=darkorange dir=back]
	Statement -> IAdd [arrowtail=diamond color=darkorange dir=back]
	Statement -> If [arrowtail=diamond color=darkorange dir=back]
	Statement -> StatementExpression [arrowtail=diamond color=darkorange dir=back]
	Statement -> While [arrowtail=diamond color=darkorange dir=back]
	Statement -> DecoratorGR [arrowtail=diamond color=darkorange dir=back]
	Statement -> ImportStatement [arrowtail=diamond color=darkorange dir=back]
	Statement -> ReturningStatement [arrowtail=diamond color=darkorange dir=back]
	DecoratorGR -> Class [arrowtail=diamond color=darkorange dir=back]
	DecoratorGR -> Decorator [arrowtail=diamond color=darkorange dir=back]
	DecoratorGR -> Function [arrowtail=diamond color=darkorange dir=back]
	Expression -> Disjunction [arrowtail=diamond color=darkorange dir=back]
	ImportStatement -> Import [arrowtail=diamond color=darkorange dir=back]
	ImportStatement -> ImportFrom [arrowtail=diamond color=darkorange dir=back]
	ReturningStatement -> Raise [arrowtail=diamond color=darkorange dir=back]
	ReturningStatement -> Return [arrowtail=diamond color=darkorange dir=back]
	ReturningStatement -> Yield [arrowtail=diamond color=darkorange dir=back]
	ReturningStatement -> YieldFrom [arrowtail=diamond color=darkorange dir=back]
	Disjunction -> Or [arrowtail=diamond color=darkorange dir=back]
	Disjunction -> Conjunction [arrowtail=diamond color=darkorange dir=back]
	Conjunction -> And [arrowtail=diamond color=darkorange dir=back]
	Conjunction -> Inversion [arrowtail=diamond color=darkorange dir=back]
	Inversion -> Not [arrowtail=diamond color=darkorange dir=back]
	Inversion -> Comparison [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Eq [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Ge [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Gt [arrowtail=diamond color=darkorange dir=back]
	Comparison -> In [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Is [arrowtail=diamond color=darkorange dir=back]
	Comparison -> IsNot [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Le [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Lt [arrowtail=diamond color=darkorange dir=back]
	Comparison -> Ne [arrowtail=diamond color=darkorange dir=back]
	Comparison -> NotIn [arrowtail=diamond color=darkorange dir=back]
	Comparison -> BitwiseOrGR [arrowtail=diamond color=darkorange dir=back]
	BitwiseOrGR -> BitwiseOr [arrowtail=diamond color=darkorange dir=back]
	BitwiseOrGR -> BitwiseXorGR [arrowtail=diamond color=darkorange dir=back]
	BitwiseXorGR -> BitwiseXor [arrowtail=diamond color=darkorange dir=back]
	BitwiseXorGR -> BitwiseAndGR [arrowtail=diamond color=darkorange dir=back]
	BitwiseAndGR -> BitwiseAnd [arrowtail=diamond color=darkorange dir=back]
	BitwiseAndGR -> ShiftGR [arrowtail=diamond color=darkorange dir=back]
	ShiftGR -> LShift [arrowtail=diamond color=darkorange dir=back]
	ShiftGR -> RShift [arrowtail=diamond color=darkorange dir=back]
	ShiftGR -> Sum [arrowtail=diamond color=darkorange dir=back]
	Sum -> Add [arrowtail=diamond color=darkorange dir=back]
	Sum -> Sub [arrowtail=diamond color=darkorange dir=back]
	Sum -> Term [arrowtail=diamond color=darkorange dir=back]
	Term -> FloorDiv [arrowtail=diamond color=darkorange dir=back]
	Term -> MatMul [arrowtail=diamond color=darkorange dir=back]
	Term -> Mod [arrowtail=diamond color=darkorange dir=back]
	Term -> Mul [arrowtail=diamond color=darkorange dir=back]
	Term -> TrueDiv [arrowtail=diamond color=darkorange dir=back]
	Term -> Factor [arrowtail=diamond color=darkorange dir=back]
	Factor -> Inv [arrowtail=diamond color=darkorange dir=back]
	Factor -> Neg [arrowtail=diamond color=darkorange dir=back]
	Factor -> Pos [arrowtail=diamond color=darkorange dir=back]
	Factor -> Power [arrowtail=diamond color=darkorange dir=back]
	Power -> Pow [arrowtail=diamond color=darkorange dir=back]
	Power -> AwaitPrimary [arrowtail=diamond color=darkorange dir=back]
	AwaitPrimary -> Awaited [arrowtail=diamond color=darkorange dir=back]
	AwaitPrimary -> Primary [arrowtail=diamond color=darkorange dir=back]
	Primary -> Call [arrowtail=diamond color=darkorange dir=back]
	Primary -> GetAttr [arrowtail=diamond color=darkorange dir=back]
	Primary -> GetItem [arrowtail=diamond color=darkorange dir=back]
	Primary -> Atom [arrowtail=diamond color=darkorange dir=back]
	Atom -> _Ellipsis [arrowtail=diamond color=darkorange dir=back]
	Atom -> _False [arrowtail=diamond color=darkorange dir=back]
	Atom -> _None [arrowtail=diamond color=darkorange dir=back]
	Atom -> _True [arrowtail=diamond color=darkorange dir=back]
	Atom -> Decimal [arrowtail=diamond color=darkorange dir=back]
	Atom -> Integer [arrowtail=diamond color=darkorange dir=back]
	Atom -> String [arrowtail=diamond color=darkorange dir=back]
	Atom -> Variable [arrowtail=diamond color=darkorange dir=back]
	Atom -> IndentedList [arrowtail=diamond color=darkorange dir=back]
	Atom -> List [arrowtail=diamond color=darkorange dir=back]
	Atom -> Tuple [arrowtail=diamond color=darkorange dir=back]
}
