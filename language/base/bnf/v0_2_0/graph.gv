digraph {
	AbstractGR [label="{ <> AbstractGR  }" fillcolor=orange shape=record style=filled]
	Engine [label="{ <> Engine | <rules> rules: BuildGR | <entry> entry: str }" fillcolor=lightblue shape=record style=filled]
	BuildGR [label="{ <> BuildGR | <type> type: str }" fillcolor=orange shape=record style=filled]
	ParallelGR [label="{ <> ParallelGR  }" fillcolor=orange shape=record style=filled]
	BuildGroup [label="{ <> BuildGroup | <refs> refs: str }" fillcolor=lightblue shape=record style=filled]
	BuildLemma [label="{ <> BuildLemma | <indented> indented: bool | <rule> rule: ParallelGR }" fillcolor=lightblue shape=record style=filled]
	BuildToken [label="{ <> BuildToken | <rule> rule: ParallelGR }" fillcolor=lightblue shape=record style=filled]
	Parallel [label="{ <> Parallel | <rules> rules: SequenceGR }" fillcolor=lightblue shape=record style=filled]
	SequenceGR [label="{ <> SequenceGR  }" fillcolor=orange shape=record style=filled]
	Sequence [label="{ <> Sequence | <rules> rules: RepeatGR }" fillcolor=lightblue shape=record style=filled]
	RepeatGR [label="{ <> RepeatGR  }" fillcolor=orange shape=record style=filled]
	Enum0 [label="{ <> Enum0 | <separator> separator: GroupingGR | <item> item: GroupingGR }" fillcolor=lightblue shape=record style=filled]
	Enum1 [label="{ <> Enum1 | <separator> separator: GroupingGR | <item> item: GroupingGR }" fillcolor=lightblue shape=record style=filled]
	Optional [label="{ <> Optional | <rule> rule: GroupingGR }" fillcolor=lightblue shape=record style=filled]
	Repeat0 [label="{ <> Repeat0 | <rule> rule: GroupingGR }" fillcolor=lightblue shape=record style=filled]
	Repeat1 [label="{ <> Repeat1 | <rule> rule: GroupingGR }" fillcolor=lightblue shape=record style=filled]
	GroupingGR [label="{ <> GroupingGR  }" fillcolor=orange shape=record style=filled]
	Grouping [label="{ <> Grouping | <rule> rule: ParallelGR }" fillcolor=lightblue shape=record style=filled]
	AtomGR [label="{ <> AtomGR  }" fillcolor=orange shape=record style=filled]
	Canonical [label="{ <> Canonical | <expr> expr: str }" fillcolor=lightblue shape=record style=filled]
	Literal [label="{ <> Literal | <expr> expr: str }" fillcolor=lightblue shape=record style=filled]
	LiteralIf [label="{ <> LiteralIf | <expr> expr: str | <key> key: str }" fillcolor=lightblue shape=record style=filled]
	Match [label="{ <> Match | <inverted> inverted: bool | <charset> charset: str }" fillcolor=lightblue shape=record style=filled]
	Store [label="{ <> Store | <type> type: str | <key> key: str }" fillcolor=lightblue shape=record style=filled]
	AbstractGR -> Engine [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> BuildGR [arrowtail=diamond color=darkorange dir=back]
	AbstractGR -> ParallelGR [arrowtail=diamond color=darkorange dir=back]
	BuildGR -> BuildGroup [arrowtail=diamond color=darkorange dir=back]
	BuildGR -> BuildLemma [arrowtail=diamond color=darkorange dir=back]
	BuildGR -> BuildToken [arrowtail=diamond color=darkorange dir=back]
	ParallelGR -> Parallel [arrowtail=diamond color=darkorange dir=back]
	ParallelGR -> SequenceGR [arrowtail=diamond color=darkorange dir=back]
	SequenceGR -> Sequence [arrowtail=diamond color=darkorange dir=back]
	SequenceGR -> RepeatGR [arrowtail=diamond color=darkorange dir=back]
	RepeatGR -> Enum0 [arrowtail=diamond color=darkorange dir=back]
	RepeatGR -> Enum1 [arrowtail=diamond color=darkorange dir=back]
	RepeatGR -> Optional [arrowtail=diamond color=darkorange dir=back]
	RepeatGR -> Repeat0 [arrowtail=diamond color=darkorange dir=back]
	RepeatGR -> Repeat1 [arrowtail=diamond color=darkorange dir=back]
	RepeatGR -> GroupingGR [arrowtail=diamond color=darkorange dir=back]
	GroupingGR -> Grouping [arrowtail=diamond color=darkorange dir=back]
	GroupingGR -> AtomGR [arrowtail=diamond color=darkorange dir=back]
	AtomGR -> Canonical [arrowtail=diamond color=darkorange dir=back]
	AtomGR -> Literal [arrowtail=diamond color=darkorange dir=back]
	AtomGR -> LiteralIf [arrowtail=diamond color=darkorange dir=back]
	AtomGR -> Match [arrowtail=diamond color=darkorange dir=back]
	AtomGR -> Store [arrowtail=diamond color=darkorange dir=back]
}
