branch Else := <N> 'else' ':' <Block as block>
branch Elif := <N> 'elif' <S> <Expression as condition> ':' <Block as block> ?<ElseGR as alt>
group  ElseGR := Else | Elif

branch WithItem      := <Expression as context_expr> <S> 'as' <S> <Expression as optional_vars> # &[',' | ')' | ':']

branch Try           := 'try' ':' <Block as block> *<Except in excepts>
branch If            := 'if' <S> <Expression as condition> ':' <Block as block> ?<ElseGR as alt>
branch While         := 'while' <S> <Expression as condition> ':' <Block as block> ?<Else as alt>
branch For           := <ForPrefix> <Expression as iterator> ':' <Block as block> ?<Else as alt>
branch With          := 'with' <S> <CS>..<WithItem in items> ':' ?<Comment as type_comment> <Block as block>
group  ScopeGR       := Try | If | While | For | With  # TODO : rename to ScopeStatement or something that kind.

# orphans -> WithItem, ElseGR